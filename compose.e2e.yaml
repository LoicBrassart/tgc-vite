services:
  backend:
    build: ./backend
    command: npm run dev
    env_file: .env
    volumes:
      - ./backend/src:/app/src/
    restart: always
    depends_on:
      db:
        condition: service_healthy

  frontend:
    build: ./frontend
    command: npm run dev
    env_file: .env
    volumes:
      - ./frontend/src:/app/src
    restart: always

  files:
    build: ./files
    volumes:
      - ./files/src:/app/src
      - ./data/uploads:/app/uploads
    env_file:
      - .env

  db:
    image: postgres
    env_file: .env
    restart: always
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -d ${POSTGRES_DB} -U ${POSTGRES_USER}"]
      interval: 5s
      timeout: 5s
      retries: 20
    volumes:
      - ./data/database:/var/lib/postgresql/data

  adminer:
    image: adminer
    restart: always
    ports:
      - 8080:8080
    depends_on:
      db:
        condition: service_healthy
    profiles:
      - dev

  gateway:
    image: nginx
    ports:
      - 7000:80
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf
    restart: always
    depends_on:
      - backend
      - frontend

  e2e:
    build: ./e2e
    volumes:
      - ./data/e2e/report:/app/playwright-report
      - ./data/e2e/results:/app/test-results
    depends_on:
      - gateway
